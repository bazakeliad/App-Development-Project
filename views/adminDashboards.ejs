<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="/main.css">
</head>
<body>
    <%- include('partials/compactHeader.ejs') %>

    <div class="container my-5">
        <h1>Admin Dashboard</h1>
        <div class="container my-3">
            <a href="/admin/console" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to Admin Console
            </a>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="card text-white bg-primary mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Total Orders</h5>
                        <p class="card-text"><%= totalOrders %></p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-success mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Total Revenue</h5>
                        <p class="card-text">$<%= totalRevenue.toFixed(2) %></p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-info mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Total Jerseys</h5>
                        <p class="card-text"><%= totalJerseys %></p>
                    </div>
                </div>
            </div>
        </div>
        <h2>Reviews Grouped by Rating</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Rating</th>
                    <th>Number of Reviews</th>
                </tr>
            </thead>
            <tbody>
                <% reviewsGroupedByRating.forEach(function(group) { %>
                    <tr>
                        <td><%= group._id %> Stars</td>
                        <td><%= group.count %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>

        <h2>Latest Orders</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Total Price</th>
                    <th>Status</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                <% latestOrders.forEach(order => { %>
                    <tr>
                        <td><%= order._id %></td>
                        <td>$<%= order.totalPrice.toFixed(2) %></td>
                        <td><%= order.status %></td>
                        <td><%= order.createdAt.toDateString() %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>

        <!-- Visualizations -->
        <h2 class="mt-5">Data Visualizations</h2>
        <div class="row">
            <!-- Bar Chart -->
            <div class="col-md-6">
                <h3>Orders by Month</h3>
                <svg id="barChart" width="500" height="300"></svg>
            </div>

            <!-- Line Chart -->
            <div class="col-md-6">
                <h3>Revenue Over Time</h3>
                <svg id="lineChart" width="500" height="300"></svg>
            </div>

            <!-- Pie Chart -->
            <div class="col-md-6">
                <h3>Order Status Distribution</h3>
                <svg id="pieChart" width="500" height="300"></svg>
            </div>
        </div>
    </div>

    <%- include('partials/footer.ejs') %>
    <script src="https://d3js.org/d3.v7.min.js"></script>

    <script>
        // Bar Chart: Orders by Month
        const ordersByMonth = <%- JSON.stringify(ordersByMonth) %>;

        const barChart = d3.select("#barChart");
        const margin = {top: 20, right: 30, bottom: 40, left: 40};
        const width = +barChart.attr("width") - margin.left - margin.right;
        const height = +barChart.attr("height") - margin.top - margin.bottom;

        const x = d3.scaleBand()
            .domain(ordersByMonth.map(d => d.month))
            .range([0, width])
            .padding(0.1);

        const y = d3.scaleLinear()
            .domain([0, d3.max(ordersByMonth, d => d.orders)])
            .nice()
            .range([height, 0]);

        const g = barChart.append("g")
            .attr("transform", `translate(${margin.left},${margin.top})`);

        g.append("g")
            .attr("class", "x-axis")
            .attr("transform", `translate(0,${height})`)
            .call(d3.axisBottom(x));

        g.append("g")
            .attr("class", "y-axis")
            .call(d3.axisLeft(y));

        g.selectAll(".bar")
            .data(ordersByMonth)
            .enter().append("rect")
            .attr("class", "bar")
            .attr("x", d => x(d.month))
            .attr("y", d => y(d.orders))
            .attr("width", x.bandwidth())
            .attr("height", d => height - y(d.orders))
            .attr("fill", "#69b3a2");

        // Line Chart: Revenue Over Time
        const revenueOverTime = <%- JSON.stringify(revenueOverTime) %>;

        const lineChart = d3.select("#lineChart")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", `translate(${margin.left},${margin.top})`);

        const xScale = d3.scaleBand()
            .domain(revenueOverTime.map(d => d.month))
            .range([0, width]);

        const yScale = d3.scaleLinear()
            .domain([0, d3.max(revenueOverTime, d => d.revenue)])
            .nice()
            .range([height, 0]);

        const line = d3.line()
            .x(d => xScale(d.month))
            .y(d => yScale(d.revenue));

        lineChart.append("g")
            .attr("transform", `translate(0,${height})`)
            .call(d3.axisBottom(xScale));

        lineChart.append("g")
            .call(d3.axisLeft(yScale));

        lineChart.append("path")
            .datum(revenueOverTime)
            .attr("fill", "none")
            .attr("stroke", "steelblue")
            .attr("stroke-width", 1.5)
            .attr("d", line);

        // Pie Chart: Order Status Distribution
        const orderStatusDistribution = <%- JSON.stringify(orderStatusDistribution) %>;

        const pie = d3.pie()
        .value(d => d.count);

        const arc = d3.arc()
            .innerRadius(0)
            .outerRadius(Math.min(width, height) / 2 - 1);

        const color = d3.scaleOrdinal()
            .domain(orderStatusDistribution.map(d => d.status))
            .range(d3.schemeCategory10);

        const pieChart = d3.select("#pieChart")
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", `translate(${width / 2},${height / 2})`);

        // Append the pie chart paths (slices)
        const arcs = pieChart.selectAll("path")
            .data(pie(orderStatusDistribution))
            .enter().append("g")
            .attr("class", "arc");

        arcs.append("path")
            .attr("fill", d => color(d.data.status))
            .attr("d", arc)
            .append("title")
            .text(d => `${d.data.status}: ${d.data.count}`);

        // Add text labels to each slice
        arcs.append("text")
            .attr("transform", d => `translate(${arc.centroid(d)})`)
            .attr("dy", "0.35em")
            .style("text-anchor", "middle")
            .text(d => `${d.data.status}: ${d.data.count}`);

    </script>
</body>
</html>
